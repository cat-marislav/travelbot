package dto;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.ObjectMapper;import lombok.Data;import lombok.SneakyThrows;import java.io.File;import java.util.List;import java.util.Map;@Datapublic class AirlineData {    private Map<String, String> name_translations;    private String code;    private String name;    private Boolean is_lowcost;    @SneakyThrows    public static List<AirlineData> getInstance() {        if (instance == null) {            instance = new ObjectMapper().readValue(new File(                            "src/main/resources/airlines.json"),                    new TypeReference<List<AirlineData>>(){}            );        }        return instance;    }    public static String findByCode(String code) {        if (code == null) {            return null;        }        for (AirlineData airline : getInstance()) {            if (airline.getCode().equals(code)) {                Map<String,String> translations = airline.getName_translations();                if (translations != null) {                    if (translations.get("ru") != null) {                        return translations.get("ru");                    }                    if (translations.get("en") != null) {                        return translations.get("en");                    }                }                if (airline.getName() != null) {                    return airline.getName();                }            }        }        return code;    }    private static List<AirlineData> instance;}